{"is_source_file": true, "format": "TypeScript", "description": "This file defines a TypeScript class NotesApiClient that provides methods for interacting with a notes database API, including fetching, creating, updating, and deleting notes. It also exports an instance of this client.", "external_files": ["../config", "./types"], "external_methods": ["getApiBaseUrl"], "published": ["notesApi"], "classes": [{"name": "NotesApiClient", "description": "A client class for making API requests related to notes, including operations like listing, retrieving, creating, updating, and deleting notes."}], "methods": [{"name": "listNotes(query?: { q?: string }): Promise<Note[]> { listNotes", "description": "Fetches a list of notes, optionally filtered by a query string.", "scope": "NotesApiClient", "scopeKind": "class"}, {"name": "getNote(id: NoteID): Promise<Note> { getNote", "description": "Retrieves a single note by its ID.", "scope": "NotesApiClient", "scopeKind": "class"}, {"name": "createNote(payload: NoteCreate): Promise<Note> { createNote", "description": "Creates a new note with the provided payload.", "scope": "NotesApiClient", "scopeKind": "class"}, {"name": "updateNote(id: NoteID, payload: NoteUpdate): Promise<Note> { updateNote", "description": "Updates an existing note identified by ID with the provided payload.", "scope": "NotesApiClient", "scopeKind": "class"}, {"name": "deleteNote(id: NoteID): Promise<{ success: boolean }> { deleteNote", "description": "Deletes a note identified by ID.", "scope": "NotesApiClient", "scopeKind": "class"}, {"name": "constructor(baseUrl?: string) { constructor", "scope": "NotesApiClient", "scopeKind": "class", "description": "unavailable"}, {"name": "private async request<T>(path: string, init?: RequestInit): Promise<T> { request", "scope": "NotesApiClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["fetch", "getApiBaseUrl"], "search-terms": ["NotesApiClient", "client-side API", "notes API methods", "TypeScript API client"], "state": 2, "file_id": 20, "knowledge_revision": 42, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesApiClient", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^export class NotesApiClient {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^  private baseUrl: string;$/", "language": "TypeScript", "kind": "property", "scope": "NotesApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^      const body = isJson ? await res.json() : await res.text();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiClient.request", "scopeKind": "method"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^  constructor(baseUrl?: string) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^  createNote(payload: NoteCreate): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^  deleteNote(id: NoteID): Promise<{ success: boolean }> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^        const error: ApiError = {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiClient.request", "scopeKind": "method"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^  getNote(id: NoteID): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "isJson", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^      const isJson =$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiClient.request", "scopeKind": "method"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^  listNotes(query?: { q?: string }): Promise<Note[]> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^          message:$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiClient.request", "scopeKind": "method"}, {"_type": "tag", "name": "notesApi", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^export const notesApi = new NotesApiClient();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^    const q = query?.q ? `?q=${encodeURIComponent(query.q)}` : \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiClient.listNotes", "scopeKind": "method"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^  private async request<T>(path: string, init?: RequestInit): Promise<T> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^      const res = await fetch(url, {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiClient.request", "scopeKind": "method"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^  updateNote(id: NoteID, payload: NoteUpdate): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^    const url = `${this.baseUrl}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiClient.request", "scopeKind": "method"}, {"_type": "tag", "name": "wrapped", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-14693-14739/notes_frontend/src/lib/api/client.ts", "pattern": "/^      const wrapped: ApiError = {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiClient.request", "scopeKind": "method"}], "hash": "1643793300117917fed41cf6c94e07ab", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/api/client.ts", "fields": [{"name": "private baseUrl: string;", "scope": "NotesApiClient", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"42": ""}]}